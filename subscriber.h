/*******************************************************************************************************************************************
* 文件名：subscriber.h
* 文件描述：973智慧协同网络SAR系统TestBed套件――数据请求端（Data Subscriber）――浏览器支持+GET包封装发送+DATA包接收解析
* 声明：本模板代码作者王兆旭，为北京交通大学下一代互联网互联设备国家工程实验室新生基础工程技术培训专用。作者王兆旭在此郑重声明，此文件及其它用于培训的模板代码均为本人精力与经验的产物，本资源的传播方式均为作者本人向他人进行一对一传授，任何个人不得向第三方转交或展示该资源内容。任何有需求的学员，均须向王兆旭本人直接索要，亦无向他人索要或传授之权利和义务。因有些资源内容涉及实验室项目秘密，暂不考虑申请专利保护或软件著作权等事宜，故个别资源仅限实验室内部一对一发放，如发现有辜负作者本人的一片好意的行为，作者将保留就其原创性进行追查、举证、申诉和问责的权利。本资源的发放权归作者本人所有，其整理和总结过程浸透无偿贡献的热忱和为诸君学业尽绵薄之力的真诚，愿学员尊重作者的劳动成果，谢谢合作！
* 作者：王兆旭
* 身份：北京交通大学下一代互联网互联设备国家工程实验室 2013级硕博连读研究生
* E-mail. hellozxwang@foxmail.com
* Mobile. 18811774990
* QQ    . 535667240
* Addr  . 北京市海淀区西直门外北京交通大学机械楼D706室, 100044
*******************************************************************************************************************************************/
/*******************************************************************************************************************************************
*****功能说明：1.向物理网口发送包含请求SID的GET类型包
**************2.接收由物理网口监听的SAR/CoLoR类型数据包；
**************3.从接收到的DATA包中提取SID对应的Data
**************4.向上以HTTP协议对接浏览器，实现数据的请求和回送
*******************************************************************************************************************************************/
/*
快速配置步骤：
1、宏定义修改
DEFAULTDIR指通过网页访问文件系统的根路径，注意系统中是否有/home，没有的话可以自行决定修改为某个路径，对正常运行没有太大影响
PhysicalPort指CoLoR协议发出Get包和接收Data包的网卡端口，注意网卡的默认有线端口名称是否为eth0，而Fedora20系统中的默认名称为em1，请注意识别
2、系统设置
在Fedora系统中因需要使用原始套接字发送自定义格式的数据包，须关闭Fedora的防火墙，命令：
sudo systemctl stop firewalld.service
在Ubuntu系统中无需任何操作
3、编译命令
gcc subscriber.c -o subscriber -lpthread
4、运行（因涉及原始套接字的使用，须root权限）
sudo ./subscriber
*/

#include"general.h"

/*******************************************************************************************************************************************
*************************************宏定义配置数据************全局变量定义******************************************************************
*******************************************************************************************************************************************/

#ifndef _NETLAYER_
#define _NETLAYER_

//CLI输入变量
uint8_t PhysicalPort[30];                     //网卡端口

char domainID[10];
char deviceNA[30];
char deviceID[30];

//本机配置信息
uint8_t Subscriber_dest_ip[16];

//全局变量
uint8_t temp[100];              //专用于各种字符串格式化的中间暂存变量
uint8_t tempdata[DATALEN];
uint8_t tempSID[SIDLEN];
uint8_t tempoffset[OFFLEN];

int Subscriber_selfpacketdonotcatch;

uint8_t local_mac[7];
uint8_t local_ip[5];
uint8_t dest_ip[16];

uint8_t broad_mac1[7];
uint8_t broad_mac2[7];

uint8_t  destmac[7];
uint8_t localmac[7];



//应用层与Subscriber模块之间传递的参数结构体
struct subscriberinput
{
	int argc;
	char argv[50][30];
};

#endif

/*******************************************************************************************************************************************
*******************************************初始化参数配置相关********************************************************************************
*******************************************************************************************************************************************/

/*****************************************
* 函数名称：Subscriber_Parameterinit
* 功能描述：Subscriber模块全局变量赋初值
* 参数列表：
* 返回结果：
*****************************************/
void
Subscriber_Parameterinit();

/*******************************************************************************************************************************************
*******************************************应用层服务器**************************************************************************************
*******************************************************************************************************************************************/

/*******************************************************************************************************************************************
*******************************************上行通道 - From.虚拟物理网口 To.应用层服务器*******************************************************
*******************************************************************************************************************************************/

/*****************************************
* 函数名称：Subscriber_CoLoR_ParsePacket
* 功能描述：CoLoR包解析函数
* 参数列表：
* 返回结果：
*****************************************/
int
Subscriber_CoLoR_ParsePacket
(
	const uint8_t * Packet,
	uint8_t * info
);

/*****************************************
* 函数名称：Subscriber_CoLoR_SeeType
* 功能描述：判断是否为、为何种CoLoR包头
* 参数列表：
* 返回结果：

*****************************************/
int
Subscriber_CoLoR_SeeType
(
	const CoLoR_VersionType * pkg
);

/*****************************************
* 函数名称：Subscriber_CoLoR_ParseGet
* 功能描述：解析CoLoR-Get包头
* 参数列表：
* 返回结果：
*****************************************/
int
Subscriber_CoLoR_ParseGet
(
	const CoLoR_get * pkg,
	uint8_t * info
);

/*****************************************
* 函数名称：Subscriber_CoLoR_ParseData
* 功能描述：解析CoLoR-Data包头
* 参数列表：

* 返回结果：
*****************************************/
int
Subscriber_CoLoR_ParseData
(
	const CoLoR_data * pkg,
	uint8_t * info
);

/*****************************************
* 函数名称：Subscriber_CoLoR_ParseRegister
* 功能描述：解析CoLoR-Register包头
* 参数列表：
* 返回结果：
*****************************************/
int
Subscriber_CoLoR_ParseRegister
(
	const CoLoR_register * pkg,
	uint8_t * info
);

/*****************************************
* 函数名称：Subscriber_SendtoAPPLayer
* 功能描述：向HTTP服务器发送解析消息
* 参数列表：
* 返回结果：
*****************************************/
int
Subscriber_SendtoAPPLayer
(
	char * data,
	int datalen
);

/*******************************************************************************************************************************************
*******************************************下行通道 - From.应用层服务器 To.虚拟物理网口*******************************************************
*******************************************************************************************************************************************/

/*****************************************
* 函数名称：Subscriber_CoLoR_PacketGet
* 功能描述：组装不含mac层的Get包
* 参数列表：
* 返回结果：
*****************************************/
int
Subscriber_CoLoR_PacketGet
(
	uint8_t * pkg,
	uint8_t * SID,
	uint8_t * OFF
);

/*****************************************
* 函数名称：Subscriber_SendtoPhysicalPort
* 功能描述：向虚拟物理网口发送数据包
* 参数列表：
* 返回结果：
*****************************************/
int
Subscriber_SendtoPhysicalPort
(
	uint8_t * pkg
);

/*******************************************************************************************************************************************
**********************************************************多线程主干程序********************************************************************
*******************************************************************************************************************************************/

/*****************************************
* 函数名称：Subscriber_thread_timer
* 功能描述：为各线程提供计时信号
* 参数列表：
* 返回结果：
*****************************************/
void *
Subscriber_thread_timer
(
	void * fd
);

/*****************************************
* 函数名称：Subscriber_thread_PhysicalPorttoAPPLayer
* 功能描述：ForwardingPlane转发平面 - From.虚拟物理网口 To.应用层服务器
* 参数列表：
* 返回结果：
*****************************************/
void *
Subscriber_thread_PhysicalPorttoAPPLayer
(
	void * fd
);

/*****************************************
* 函数名称：Subscriber_thread_APPLayertoPhysicalPort
* 功能描述：ForwardingPlane转发平面 - From.应用层服务器 To.虚拟物理网口
* 参数列表：
* 返回结果：
*****************************************/
void *
Subscriber_thread_APPLayertoPhysicalPort
(
	void * fd
);

/*****************************************
* 函数名称：Subscriber_main
* 功能描述：Subscriber模块主函数，启动ForwardingPlane转发平面线程。自身主循环执行简单HTTP服务器功能。
* 参数列表：
eg: ./sub d1sub1 d1sub1-eth1
第二参数使用char**argv的方式声明报错，不知是不是语法问题
* 返回结果：
*****************************************/
/*
int
Subscriber_main
(
	int argc,
	char argv[][30]
);
*/
void *
Subscriber_main
(
	void * fd
);
